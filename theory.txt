Основы ООП и объявление класса в C#

ООП - парадигма программирования, основанная на концепции объектов(поля, методы)

Различают 4 вида:
1. Инкапсуляция - сокрытие внутренних деталей работы и предоставление интерфейса для взаимодействия(пример:
мы пользуемся телевизором, но не знаем как он устроен внутри)
2. Наследование - механизм языка, который позволяет конструировать объект на основе другого уже существующего
3. Полиморфизм - использование функции базового класса для разных типов(функция голос для разных животных работает
по разному)
4. Абстракция - игнорирование критически важных деталей??????(пример: когда вы водите автомобиль, вы не думаете о внутреннем устройстве двигателя, вы просто используете педали и руль)

Отличие класса от структуры в том, что класс - это ссылочный тип, а структура - значимый

Семантика - это смысл отдельных элементов программы, написанных по правилам синтаксиса

Сигнатура - это название метода и аргументов, которые я добавляю

public ставится в интерфейсе по умолчанию

var нужен для того, чтобы программист не думал, какой тип переменной присвоить

Делегат - это тип данных, который хранит ссылки на методы(реализация отписки и подписки)

Событие - это обертка для делегата

Неявное от явного преобразования интерфейса(часть механизма инкапсуляции) отличается ограничением видимости метаданных

